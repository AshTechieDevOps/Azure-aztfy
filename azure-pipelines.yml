# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

parameters:
  - name: version
    displayName: Release Version (e.g. v0.1.0)
    type: string

stages:
  - stage: build
    displayName: "Build aztfy"
    jobs:
      - job: build
        displayName: "Build Binaries"
        strategy:
         matrix:
          windows-386:
            OS: windows
            ARCH: 386
          # windows-amd64:
          #   OS: windows
          #   ARCH: amd64
          # linux-386:
          #   OS: linux
          #   ARCH: 386
          # linux-amd64:
          #   OS: linux
          #   ARCH: amd64
          # linux-arm:
          #   OS: linux
          #   ARCH: arm
          # linux-arm64:
          #   OS: linux
          #   ARCH: arm64
          # darwin-amd64:
          #   OS: darwin
          #   ARCH: amd64
          # darwin-arm64:
          #   OS: darwin
          #   ARCH: arm64
        steps:
          - task: GoTool@0
            displayName: 'Install Go'
            inputs:
              version: 1.19
          - script: |
              pwd
              set -x
              REVISION=`git rev-parse --short HEAD`
              dir=${OS}_${ARCH}
              mkdir -p $dir
              output=aztfy
              if [[ $OS = windows ]]; then
                  output=aztfy.exe
              fi
              GOOS="${OS}" GOARCH="${ARCH}" CGO_ENABLED=0 go build -trimpath -ldflags="-s -w -X 'main.version=${VERSION}' -X 'main.revision=${REVISION}'" -o $dir/$output
            displayName: "Go Build"
            env:
              OS: $(OS)
              ARCH: $(ARCH)
              VERSION: $(version)
          - task: PublishPipelineArtifact@1
            displayName: "Publish Binary"
            inputs:
              targetPath: '$(system.defaultWorkingDirectory)/$(OS)_$(ARCH)'
              artifactName: 'artifact'
              artifactType: 'pipeline'
  # - stage: release_linux_packages
  #   displayName: "Release Linux Packages"
  # - stage: release_windows_setup
  #   displayName: "Release Windows Setup"
  # - stage: draft_github_release
  #   displayName: "Draft Github Release"
